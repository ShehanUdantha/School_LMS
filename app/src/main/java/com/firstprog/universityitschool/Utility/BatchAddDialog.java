package com.firstprog.universityitschool.Utility;

import android.app.Dialog;
import android.content.Context;
import android.graphics.Color;
import android.graphics.drawable.ColorDrawable;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;

import androidx.annotation.NonNull;

import com.firstprog.universityitschool.R;
import com.google.android.gms.tasks.OnCompleteListener;
import com.google.android.gms.tasks.Task;
import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.database.DataSnapshot;
import com.google.firebase.database.DatabaseError;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;
import com.google.firebase.database.ValueEventListener;

public class BatchAddDialog {

    private Context context;
    private Dialog batchDialog;
    Button submit;
    private EditText Batch;
    private LoadingDialog loading_Dialog, loading_Dialog2;
    private DatabaseReference databaseReference;
    private FirebaseAuth firebaseAuth;
    private TextView itemTitles;


    public BatchAddDialog(Context context) {
        this.context = context;
    }

    //display editText view when clicking add button
    public void showDialog(String itemTitle) {
        batchDialog = new Dialog(context);
        batchDialog.setContentView(R.layout.activity_one_item_add_dialog);
        batchDialog.getWindow().setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));
        batchDialog.setCanceledOnTouchOutside(true);

        itemTitles = batchDialog.findViewById(R.id.itemTitle);
        itemTitles.setText(itemTitle);

        Batch = batchDialog.findViewById(R.id.addItem);

        batchDialog.create();
        batchDialog.show();
    }


    //return button id to userFragment
    public Button submit() {
        return submit = batchDialog.findViewById(R.id.btnSubmitItem);
    }

    //upload newly added batch to the firebase
    public void uploadToFirebase() {

        //check internet connection
        if (!CheckNetwork.isConnected(context)) {
            CheckNetwork.showNetworkDialog(context);
        } else {

            loading_Dialog = new LoadingDialog(context);
            String batch = Batch.getText().toString();

            if (valid(batch)) {
                loading_Dialog.showDialog("Please Wait..");

                databaseReference = FirebaseDatabase.getInstance("https://itschool-auth-default-rtdb.firebaseio.com").getReference("batch");

                // Generate a reference to a new location and add some data using push()
                DatabaseReference pushedPostRef = databaseReference.push();
                // Get the unique ID generated by a push()
                String postId = pushedPostRef.getKey();

                databaseReference.child(postId).child("mainChildVal").setValue(postId);
                databaseReference.child(postId).child("batchID").setValue(batch);

                Batch.setText(" ");
                batchDialog.dismiss();
                loading_Dialog.HideDialog();

                Toast.makeText(context, "Added Successfully", Toast.LENGTH_SHORT).show();
            }
        }

    }

    //display editText view with user details when clicking edit button
    public void showDialogWithDetails(String batch, String itemTitle) {

        //check internet connection
        if (!CheckNetwork.isConnected(context)) {
            CheckNetwork.showNetworkDialog(context);
        } else {

            batchDialog = new Dialog(context);
            batchDialog.setContentView(R.layout.activity_one_item_add_dialog);
            batchDialog.getWindow().setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));
            batchDialog.setCanceledOnTouchOutside(true);

            itemTitles = batchDialog.findViewById(R.id.itemTitle);
            itemTitles.setText(itemTitle);

            //set batch number in preview
            Batch = batchDialog.findViewById(R.id.addItem);
            Batch.setText(batch);

            batchDialog.create();
            batchDialog.show();
        }
    }

    //update firebase batch data when clicking edit button
    public void updateFirebaseDetails(String pVal) {

        //check internet connection
        if (!CheckNetwork.isConnected(context)) {
            CheckNetwork.showNetworkDialog(context);
        } else {

            loading_Dialog2 = new LoadingDialog(context);

            String newBatch = Batch.getText().toString();

            firebaseAuth = FirebaseAuth.getInstance();
            databaseReference = FirebaseDatabase.getInstance("https://itschool-auth-default-rtdb.firebaseio.com").getReference("batch");

            if (valid(newBatch)) {
                loading_Dialog2.showDialog("Please Wait..");

                databaseReference.addListenerForSingleValueEvent(new ValueEventListener() {
                    @Override
                    public void onDataChange(@NonNull DataSnapshot snapshot) {
                        for (DataSnapshot ds : snapshot.getChildren()) {
                            String allPreVAL = ds.child("mainChildVal").getValue().toString();

                            if (allPreVAL.equals(pVal)) {
                                ds.child("batchID").getRef().setValue(newBatch).addOnCompleteListener(new OnCompleteListener<Void>() {
                                    @Override
                                    public void onComplete(@NonNull Task<Void> task) {

                                        batchDialog.dismiss();
                                        Toast.makeText(context, "Update Successful", Toast.LENGTH_SHORT).show();
                                    }
                                });
                            }
                        }
                    }

                    @Override
                    public void onCancelled(@NonNull DatabaseError error) {
                        throw error.toException();
                    }
                });

                loading_Dialog2.HideDialog();
            }
        }

    }


    private boolean valid(String batch) {
        if (batch.isEmpty()) {
            Toast.makeText(context, "Batch Cannot be Empty!", Toast.LENGTH_SHORT).show();
            return false;
        }

        return true;
    }

}