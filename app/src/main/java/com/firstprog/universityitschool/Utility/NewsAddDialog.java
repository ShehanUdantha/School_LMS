package com.firstprog.universityitschool.Utility;

import static android.content.ContentValues.TAG;

import android.app.Dialog;
import android.content.Context;
import android.graphics.Color;
import android.graphics.drawable.ColorDrawable;
import android.net.Uri;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.Toast;

import androidx.annotation.NonNull;

import com.bumptech.glide.Glide;
import com.firstprog.universityitschool.Model.UserModel;
import com.firstprog.universityitschool.R;
import com.google.android.gms.auth.api.signin.internal.Storage;
import com.google.android.gms.tasks.OnCompleteListener;
import com.google.android.gms.tasks.OnFailureListener;
import com.google.android.gms.tasks.OnSuccessListener;
import com.google.android.gms.tasks.Task;
import com.google.firebase.auth.AuthResult;
import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.database.DataSnapshot;
import com.google.firebase.database.DatabaseError;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;
import com.google.firebase.database.ValueEventListener;
import com.google.firebase.storage.FirebaseStorage;
import com.google.firebase.storage.StorageReference;
import com.google.firebase.storage.UploadTask;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Locale;
import java.util.UUID;

public class NewsAddDialog {

    private Context context;
    private Dialog newsAddDia;
    private TextView NewsScreenTitle;
    private EditText theNewsTitle, theNewsDec;
    Button submit;
    private ImageView btnAddImg, uploadImg;
    private DatabaseReference databaseReference;
    private StorageReference storageReference;
    private String defaultUrl;
    private LoadingDialog loading_Dialog, loading_Dialog2;

    public NewsAddDialog(Context context) {
        this.context = context;
    }

    //display editText view when clicking add button
    public void showDialog() {
        newsAddDia = new Dialog(context);
        newsAddDia.setContentView(R.layout.news_add_dialog);
        newsAddDia.getWindow().setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));
        newsAddDia.setCanceledOnTouchOutside(true);

        NewsScreenTitle = newsAddDia.findViewById(R.id.NewsScreenTitle);
        NewsScreenTitle.setText("Add New News");

        uploadImg = newsAddDia.findViewById(R.id.uploadImg);
        theNewsTitle = newsAddDia.findViewById(R.id.newsTitle);
        theNewsDec = newsAddDia.findViewById(R.id.theNews);

        newsAddDia.create();
        newsAddDia.show();
    }

    //return button id to news Fragment
    public Button submit() {
        return submit = newsAddDia.findViewById(R.id.btnSubmitNews);
    }

    public ImageView imageSelectionView() {
        return btnAddImg = newsAddDia.findViewById(R.id.btnAddImg);
    }

    public void updateImage(String updateImg) {
        Glide.with(context)
                .asBitmap()
                .load(updateImg)
                .into(uploadImg);

        btnAddImg.setVisibility(View.GONE);
    }

    public void uploadToFirebase(Uri fillPath) {

        //check internet connection
        if (!CheckNetwork.isConnected(context)) {
            CheckNetwork.showNetworkDialog(context);
        } else {

            loading_Dialog = new LoadingDialog(context);

            String newsTitle = theNewsTitle.getText().toString();
            String theNews = theNewsDec.getText().toString();

            databaseReference = FirebaseDatabase.getInstance("https://itschool-auth-default-rtdb.firebaseio.com").getReference("news");
            storageReference = FirebaseStorage.getInstance().getReference();
            defaultUrl = "https://firebasestorage.googleapis.com/v0/b/itschool-auth.appspot.com/o/news%2Fdefault%2Ftaras-shypka-iFSvn82XfGo-unsplash.jpg?alt=media&token=5a024d44-f83f-43c0-814b-c0ae9df6a888";

            //validate user inputs
            if (validator(newsTitle, theNews)) {
                loading_Dialog.showDialog("Please Wait..");

                // Generate a reference to a new location and add some data using push()
                DatabaseReference pushedPostRef = databaseReference.push();
                // Get the unique ID generated by a push()
                String postId = pushedPostRef.getKey();

                databaseReference.child(postId).child("newsMainChildName").setValue(postId);
                databaseReference.child(postId).child("newsTitle").setValue(newsTitle);
                databaseReference.child(postId).child("news").setValue(theNews);
                if (fillPath != null) {
                    getImageUrl(postId, fillPath);
                } else {
                    databaseReference.child(postId).child("newsUrl").setValue(defaultUrl);
                }

                theNewsTitle.setText(" ");
                theNewsDec.setText(" ");

                newsAddDia.dismiss();
                loading_Dialog.HideDialog();

                Toast.makeText(context, "Added Successfully", Toast.LENGTH_SHORT).show();

            } else {
                if (newsTitle.isEmpty() && theNews.isEmpty())
                    Toast.makeText(context, "Sorry Check Information Again!", Toast.LENGTH_SHORT).show();
            }
        }
    }

    //display editText view with user details when clicking edit button
    public void showDialogWithDetails(String imgUrl, String nTitle, String news) {

        //check internet connection
        if (!CheckNetwork.isConnected(context)) {
            CheckNetwork.showNetworkDialog(context);
        } else {

            newsAddDia = new Dialog(context);
            newsAddDia.setContentView(R.layout.news_add_dialog);
            newsAddDia.getWindow().setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));
            newsAddDia.setCanceledOnTouchOutside(true);

            NewsScreenTitle = newsAddDia.findViewById(R.id.NewsScreenTitle);
            NewsScreenTitle.setText("Update News");

            //set batch number in preview
            uploadImg = newsAddDia.findViewById(R.id.uploadImg);
            Glide.with(context)
                    .asBitmap()
                    .load(imgUrl)
                    .into(uploadImg);
            theNewsTitle = newsAddDia.findViewById(R.id.newsTitle);
            theNewsTitle.setText(nTitle);
            theNewsDec = newsAddDia.findViewById(R.id.theNews);
            theNewsDec.setText(news);

            ImageView btnAddEdit = newsAddDia.findViewById(R.id.btnAddImg);
            btnAddEdit.setVisibility(View.GONE);

            newsAddDia.create();
            newsAddDia.show();
        }
    }

    //update firebase batch data when clicking edit button
    public void updateFirebaseDetails(String pVal) {

        //check internet connection
        if (!CheckNetwork.isConnected(context)) {
            CheckNetwork.showNetworkDialog(context);
        } else {

            loading_Dialog2 = new LoadingDialog(context);

            String newNewsTitle = theNewsTitle.getText().toString();
            String newTheNews = theNewsDec.getText().toString();

            databaseReference = FirebaseDatabase.getInstance("https://itschool-auth-default-rtdb.firebaseio.com").getReference("news");

            if (validator(newNewsTitle, newTheNews)) {
                loading_Dialog2.showDialog("Please Wait..");

                databaseReference.addListenerForSingleValueEvent(new ValueEventListener() {
                    @Override
                    public void onDataChange(@NonNull DataSnapshot snapshot) {
                        for (DataSnapshot ds : snapshot.getChildren()) {
                            String allPreVAL = ds.child("newsMainChildName").getValue().toString();

                            if (allPreVAL.equals(pVal)) {
                                ds.child("newsTitle").getRef().setValue(newNewsTitle).addOnCompleteListener(new OnCompleteListener<Void>() {
                                    @Override
                                    public void onComplete(@NonNull Task<Void> task) {

                                        newsAddDia.dismiss();
                                        Toast.makeText(context, "Update Successful", Toast.LENGTH_SHORT).show();
                                    }
                                });

                                ds.child("news").getRef().setValue(newTheNews).addOnCompleteListener(new OnCompleteListener<Void>() {
                                    @Override
                                    public void onComplete(@NonNull Task<Void> task) {

                                        newsAddDia.dismiss();
                                        Toast.makeText(context, "Update Successful", Toast.LENGTH_SHORT).show();
                                    }
                                });
                            }
                        }
                    }

                    @Override
                    public void onCancelled(@NonNull DatabaseError error) {
                        throw error.toException();
                    }
                });

                loading_Dialog2.HideDialog();
            }
        }

    }


    private boolean validator(String newsTitle, String theNews) {
        if (newsTitle.isEmpty()) {
            Toast.makeText(context, "UserFirstName Cannot be Empty!", Toast.LENGTH_SHORT).show();
            return false;
        } else if (theNews.isEmpty()) {
            Toast.makeText(context, "UserLastName Cannot be Empty!", Toast.LENGTH_SHORT).show();
            return false;
        }
        return true;
    }

    //selected img upload to the firebase and get firebase url and store it news img path according to news id
    public void getImageUrl(String newsId, Uri fillPath) {
        StorageReference ref = storageReference.child("news").child(newsId).child("images/" + UUID.randomUUID().toString());
        ref.putFile(fillPath)
                .addOnSuccessListener(new OnSuccessListener<UploadTask.TaskSnapshot>() {
                    @Override
                    public void onSuccess(UploadTask.TaskSnapshot taskSnapshot) {

                        //get url of uploaded img
                        taskSnapshot.getStorage().getDownloadUrl().addOnCompleteListener(new OnCompleteListener<Uri>() {
                            @Override
                            public void onComplete(@NonNull Task<Uri> task) {
                                databaseReference.child(newsId).child("newsUrl").setValue(task.getResult().toString());
                            }
                        });
                    }
                })
                .addOnFailureListener(new OnFailureListener() {
                    @Override
                    public void onFailure(@NonNull Exception e) {
                    }
                });
    }

}
