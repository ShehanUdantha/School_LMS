package com.firstprog.universityitschool.Utility;

import android.app.Dialog;
import android.content.Context;
import android.graphics.Color;
import android.graphics.drawable.ColorDrawable;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;

import androidx.annotation.NonNull;

import com.firstprog.universityitschool.R;
import com.google.android.gms.tasks.OnCompleteListener;
import com.google.android.gms.tasks.Task;
import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.database.DataSnapshot;
import com.google.firebase.database.DatabaseError;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;
import com.google.firebase.database.ValueEventListener;

public class Week_Quiz_AddDialog {

    private Context context;
    private Dialog quizDialog;
    private TextView quizScreenTitle;
    private Button submit;
    private EditText qTitle, answer1, answer2, answer3, answer4, correctAnswer;
    private LoadingDialog loadingDialog, loading_Dialog2;
    private String quiz, answer_one, answer_two, answer_three, answer_four, correct_letter;
    private DatabaseReference databaseReference, newDatabaseReference, pushedPostRef;


    public Week_Quiz_AddDialog(Context context) {
        this.context = context;
    }

    //display editText view when clicking add button
    public void showDialog(String itemTitle) {
        quizDialog = new Dialog(context);
        quizDialog.setContentView(R.layout.quiz_add_dialog);
        quizDialog.getWindow().setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));
        quizDialog.setCanceledOnTouchOutside(true);

        quizScreenTitle = quizDialog.findViewById(R.id.quizScreenTitle);
        quizScreenTitle.setText(itemTitle);

        qTitle = quizDialog.findViewById(R.id.qTitle);
        answer1 = quizDialog.findViewById(R.id.answer1);
        answer2 = quizDialog.findViewById(R.id.answer2);
        answer3 = quizDialog.findViewById(R.id.answer3);
        answer4 = quizDialog.findViewById(R.id.answer4);
        correctAnswer = quizDialog.findViewById(R.id.correctAnswer);

        quizDialog.create();
        quizDialog.show();
    }

    //return button id to week quiz add Fragment
    public Button submit() {
        return submit = quizDialog.findViewById(R.id.btnSubmitQuiz);
    }

    //upload newly added week to the firebase
    public void uploadToFirebase(String quizID, String batchNumber, String semesterNumber, String subjectNumber, String weekNumber) {
        //check internet connection
        if (!CheckNetwork.isConnected(context)) {
            CheckNetwork.showNetworkDialog(context);
        } else {
            loadingDialog = new LoadingDialog(context);

            quiz = qTitle.getText().toString();
            answer_one = answer1.getText().toString();
            answer_two = answer2.getText().toString();
            answer_three = answer3.getText().toString();
            answer_four = answer4.getText().toString();
            correct_letter = correctAnswer.getText().toString();

            if (valid(quiz, answer_one, answer_two, answer_three, answer_four, correct_letter)) {
                loadingDialog.showDialog("Please Wait..");

                databaseReference = FirebaseDatabase.getInstance("https://itschool-auth-default-rtdb.firebaseio.com").getReference("batch").child(batchNumber).child("batch_Sem").child(semesterNumber).child("semester_subject").child(subjectNumber).child("weeks").child(weekNumber).child("week_quiz");

                databaseReference.addListenerForSingleValueEvent(new ValueEventListener() {
                    @Override
                    public void onDataChange(@NonNull DataSnapshot snapshot) {
                        for (DataSnapshot ds : snapshot.getChildren()) {
                            String allSubID = ds.child("quizID").getValue().toString();

                            if (allSubID.equals(quizID)) {
                                newDatabaseReference = ds.child("quizzes").getRef();
                                // Generate a reference to a new location and add some data using push()
                                pushedPostRef = newDatabaseReference.push();
                                // Get the unique ID generated by a push()
                                String postId = pushedPostRef.getKey();

                                newDatabaseReference.child(postId).child("quizNewMainChildID").setValue(postId);
                                newDatabaseReference.child(postId).child("question").setValue(quiz);
                                newDatabaseReference.child(postId).child("answer_one").setValue(answer_one);
                                newDatabaseReference.child(postId).child("answer_two").setValue(answer_two);
                                newDatabaseReference.child(postId).child("answer_three").setValue(answer_three);
                                newDatabaseReference.child(postId).child("answer_four").setValue(answer_four);
                                newDatabaseReference.child(postId).child("correct_letter").setValue(correct_letter);

                                qTitle.setText(" ");
                                answer1.setText(" ");
                                answer2.setText(" ");
                                answer3.setText(" ");
                                answer4.setText(" ");
                                correctAnswer.setText(" ");

                                quizDialog.dismiss();
                                loadingDialog.HideDialog();

                                Toast.makeText(context, "Added Successfully", Toast.LENGTH_SHORT).show();

                            }
                        }
                    }

                    @Override
                    public void onCancelled(@NonNull DatabaseError error) {
                        throw error.toException();
                    }
                });

                quizDialog.dismiss();
                loadingDialog.HideDialog();
            }

        }
    }

    //display editText view with quiz details when clicking edit button
    public void showDialogWithDetails(String qus, String one, String two, String three, String four, String corr, String itemTitle) {
        //check internet connection
        if (!CheckNetwork.isConnected(context)) {
            CheckNetwork.showNetworkDialog(context);
        } else {

            quizDialog = new Dialog(context);
            quizDialog.setContentView(R.layout.quiz_add_dialog);
            quizDialog.getWindow().setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));
            quizDialog.setCanceledOnTouchOutside(true);

            quizScreenTitle = quizDialog.findViewById(R.id.quizScreenTitle);
            quizScreenTitle.setText(itemTitle);

            qTitle = quizDialog.findViewById(R.id.qTitle);
            answer1 = quizDialog.findViewById(R.id.answer1);
            answer2 = quizDialog.findViewById(R.id.answer2);
            answer3 = quizDialog.findViewById(R.id.answer3);
            answer4 = quizDialog.findViewById(R.id.answer4);
            correctAnswer = quizDialog.findViewById(R.id.correctAnswer);

            //set firebase details in edit text preview
            qTitle = quizDialog.findViewById(R.id.qTitle);
            qTitle.setText(qus);
            answer1 = quizDialog.findViewById(R.id.answer1);
            answer1.setText(one);
            answer2 = quizDialog.findViewById(R.id.answer2);
            answer2.setText(two);
            answer3 = quizDialog.findViewById(R.id.answer3);
            answer3.setText(three);
            answer4 = quizDialog.findViewById(R.id.answer4);
            answer4.setText(four);
            correctAnswer = quizDialog.findViewById(R.id.correctAnswer);
            correctAnswer.setText(corr);

            quizDialog.create();
            quizDialog.show();
        }
    }

    //update firebase quiz data when clicking edit button
    public void updateFirebaseDetails(String getBatchPreNumber, String getSemesterPreNumber, String getSubjectPreNumber, String weekPreKey, String quizPreKey, String pVal) {

        //check internet connection
        if (!CheckNetwork.isConnected(context)) {
            CheckNetwork.showNetworkDialog(context);
        } else {

            loading_Dialog2 = new LoadingDialog(context);

            String newQuestion = qTitle.getText().toString();
            String newAnswer_one = answer1.getText().toString();
            String newAnswer_two = answer2.getText().toString();
            String newAnswer_three = answer3.getText().toString();
            String newAnswer_four = answer4.getText().toString();
            String newCorrect_letter = correctAnswer.getText().toString();

            databaseReference = FirebaseDatabase.getInstance("https://itschool-auth-default-rtdb.firebaseio.com").getReference("batch").child(getBatchPreNumber).child("batch_Sem").child(getSemesterPreNumber).child("semester_subject").child(getSubjectPreNumber).child("weeks").child(weekPreKey).child("week_quiz").child(quizPreKey).child("quizzes");

            if (valid(newQuestion, newAnswer_one, newAnswer_two, newAnswer_three, newAnswer_four, newCorrect_letter)) {
                loading_Dialog2.showDialog("Please Wait..");

                databaseReference.addListenerForSingleValueEvent(new ValueEventListener() {
                    @Override
                    public void onDataChange(@NonNull DataSnapshot snapshot) {
                        for (DataSnapshot ds : snapshot.getChildren()) {
                            String allPreVAL = ds.child("quizNewMainChildID").getValue().toString();

                            if (allPreVAL.equals(pVal)) {
                                ds.child("question").getRef().setValue(newQuestion).addOnCompleteListener(new OnCompleteListener<Void>() {
                                    @Override
                                    public void onComplete(@NonNull Task<Void> task) {

                                        quizDialog.dismiss();
                                        loading_Dialog2.HideDialog();
                                        Toast.makeText(context, "Update Successful", Toast.LENGTH_SHORT).show();
                                    }
                                });

                                ds.child("answer_one").getRef().setValue(newAnswer_one).addOnCompleteListener(new OnCompleteListener<Void>() {
                                    @Override
                                    public void onComplete(@NonNull Task<Void> task) {

                                        quizDialog.dismiss();
                                        loading_Dialog2.HideDialog();
                                        Toast.makeText(context, "Update Successful", Toast.LENGTH_SHORT).show();
                                    }
                                });

                                ds.child("answer_two").getRef().setValue(newAnswer_two).addOnCompleteListener(new OnCompleteListener<Void>() {
                                    @Override
                                    public void onComplete(@NonNull Task<Void> task) {

                                        quizDialog.dismiss();
                                        loading_Dialog2.HideDialog();
                                        Toast.makeText(context, "Update Successful", Toast.LENGTH_SHORT).show();
                                    }
                                });

                                ds.child("answer_three").getRef().setValue(newAnswer_three).addOnCompleteListener(new OnCompleteListener<Void>() {
                                    @Override
                                    public void onComplete(@NonNull Task<Void> task) {

                                        quizDialog.dismiss();
                                        loading_Dialog2.HideDialog();
                                        Toast.makeText(context, "Update Successful", Toast.LENGTH_SHORT).show();
                                    }
                                });

                                ds.child("answer_four").getRef().setValue(newAnswer_four).addOnCompleteListener(new OnCompleteListener<Void>() {
                                    @Override
                                    public void onComplete(@NonNull Task<Void> task) {

                                        quizDialog.dismiss();
                                        loading_Dialog2.HideDialog();
                                        Toast.makeText(context, "Update Successful", Toast.LENGTH_SHORT).show();
                                    }
                                });

                                ds.child("correct_letter").getRef().setValue(newCorrect_letter).addOnCompleteListener(new OnCompleteListener<Void>() {
                                    @Override
                                    public void onComplete(@NonNull Task<Void> task) {

                                        quizDialog.dismiss();
                                        loading_Dialog2.HideDialog();
                                        Toast.makeText(context, "Update Successful", Toast.LENGTH_SHORT).show();
                                    }
                                });
                            }
                        }
                    }

                    @Override
                    public void onCancelled(@NonNull DatabaseError error) {
                        throw error.toException();
                    }
                });
                quizDialog.dismiss();
                loading_Dialog2.HideDialog();
            }
        }
    }

    private boolean valid(String quiz, String answer_one, String answer_two, String answer_three, String answer_four, String correct_letter) {
        if (quiz.isEmpty() && answer_one.isEmpty() && answer_two.isEmpty() && answer_three.isEmpty() && answer_four.isEmpty() && correct_letter.isEmpty()) {
            Toast.makeText(context, "Sorry Check Information Again!", Toast.LENGTH_SHORT).show();
            return false;
        } else if (quiz.isEmpty()) {
            Toast.makeText(context, "Question Cannot be Empty!", Toast.LENGTH_SHORT).show();
            return false;
        } else if (answer_one.isEmpty()) {
            Toast.makeText(context, "Answer one Cannot be Empty!", Toast.LENGTH_SHORT).show();
            return false;
        } else if (answer_two.isEmpty()) {
            Toast.makeText(context, "Answer two Cannot be Empty!", Toast.LENGTH_SHORT).show();
            return false;
        } else if (answer_three.isEmpty()) {
            Toast.makeText(context, "Answer three Cannot be Empty!", Toast.LENGTH_SHORT).show();
            return false;
        } else if (answer_four.isEmpty()) {
            Toast.makeText(context, "Answer four Cannot be Empty!", Toast.LENGTH_SHORT).show();
            return false;
        } else if (correct_letter.isEmpty()) {
            Toast.makeText(context, "Correct answer Cannot be Empty!", Toast.LENGTH_SHORT).show();
            return false;
        } else if ((!correct_letter.equals("a") && !correct_letter.equals("A")) && (!correct_letter.equals("b") && !correct_letter.equals("B")) && (!correct_letter.equals("c") && !correct_letter.equals("C")) && (!correct_letter.equals("d") && !correct_letter.equals("D"))) {
            Toast.makeText(context, "Correct answer type should be: a or b or c or d", Toast.LENGTH_SHORT).show();
            return false;
        }

        return true;
    }
}
